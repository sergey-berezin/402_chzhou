<Window x:Class="Lab2_zhou.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:bertviewmodel="clr-namespace:BertViewModel;assembly=BertViewModel"
        d:DataContext="{d:DesignInstance Type=bertviewmodel:TabItemViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="570" Width="800">
    <Window.Resources>
        <Style TargetType="TextBox">
            <!--The text foreground color will turn red when validation errors occur.-->
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="#FF17A3C2" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Close Button Style -->
        <Style x:Key="TabCloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- TextBox Error Style -->
        <Style x:Key="ErrorTextBoxStyle" TargetType="TextBox">
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self},
                                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel Orientation="Vertical">
            <Button Name ="AddTabBtn" Content="New Tab" Command="{Binding NewTabCommand}" Margin="10" Click="AddTabBtn_Click"/>
            <TabControl Name="tabDynamic" ItemsSource="{Binding TabItems, Mode=TwoWay}" SelectedIndex="{Binding SelectedTab}">
                <!--加载页面-->
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <Button Name="btnDelete"
                    DockPanel.Dock="Right"
                    Margin="5,0,0,0"
                    Padding="0"
                    Content="✖"
                    Command="{Binding DataContext.RemoveTabCommand, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                    CommandParameter="{Binding Header, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}"/>
                            <TextBlock Text="{Binding TabName}" />
                        </DockPanel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Margin="10">
                            <!-- Load Text File Button -->
                            <Button Content="Load Text File" Command="{Binding LoadTextFileCommand}" 
                    Margin="0,0,0,10" Width="150" Height="30"/>

                            <!-- Text Display Section -->
                            <Label Content="Text:" FontWeight="Bold" Margin="0,10,0,0"/>
                            <TextBox Text="{Binding TextFromFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     Margin="0,0,0,10" Height="100" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"/>

                            <!-- Question Input Section -->
                            <Label Content="Question:" FontWeight="Bold" Margin="0,10,0,0"/>
                            <TextBox Text="{Binding Question, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     Margin="0,0,0,10" Height="30"/>

                            <!-- Answer and Cancel Buttons -->
                            <StackPanel Orientation="Horizontal" Margin="0,10,0,10">
                                <Button Content="Answer" Command="{Binding GetAnswerCommand}" 
                        Width="150" Height="30" Margin="0,10,0,0"/>
                                <Button Content="Cancel" Command="{Binding CancelAnswerCommand}" 
                        IsEnabled="{Binding CancelEnabled}" 
                        Width="150" Height="30" Margin="10,10,0,0"/>
                            </StackPanel>

                            <!-- Model Answer Section -->
                            <Label Content="Model_Answer:" FontWeight="Bold" Margin="0,10,0,0"/>
                            <TextBox Text="{Binding Answer}" IsReadOnly="True" 
                     Margin="0,0,0,10" Height="100" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto"/>
                        </StackPanel>
                    </DataTemplate>
                </TabControl.ContentTemplate>

            </TabControl>
        </StackPanel>
    </Grid>
</Window>